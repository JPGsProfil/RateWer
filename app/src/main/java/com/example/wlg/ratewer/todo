
Design (StartNewGame bsp Auswahl der Schwierigkeitsstufe als Slider statt aufklappend ...)
Optionsmenu Design wenn nur noch 2 Elemente übrig sind -> Hat Bart ja, hat Bart nein ...
Verzögerung zwischen 2 Bildschirmausgaben einbauen
Extra Thread für Hellseher ZUgberechnung,
    diese gleich am Anfang, während Spieler eins noch dran ist -> dann fällt es nicht so auf
    Hellseher Performance Optimierung

    Runde beenden : in FUnktionen auslagern, z.B.:
    TextView tv_title = (TextView) findViewById(R.id.tv_Title_Ingame);
            ist immer wieder das selbe, Spieler X, mache deinen ZUg, beende deinen ZUg ...

Texte durch konstanten ersetzen, am besten in @string, damit mehrere sprachen möglich sind
Bsp.:  StartNewGameActicity.java zeile87

Siegernachricht ändern
da Spieler gegen SPieler möglich ist
"Du hast gewonnen oder verloren ungünstig"



Optional: SPiel mit mehr als 2 Spielern
bsp 4 -> runde geht rum, spieler 1 fragt spieler 2, spieler 2 fragt spieler 3, wenn runde vorbei ist, fragt spieler  1 spieler 3, spieler 2 spieler 4...
wer als erstes einen Spieler erraten hat, ist Sieger

image handling via glide
glide resizing image

sauebere Implementierung von compareTo in AttribValue bzw. Festlegung eines Standards für bool (true, false, 0,1, ja, nein ...) (json)



done:
Speicherproblem -> Überbleibsel wenn zurück button und neues Spiel
-> Speicherfreigabe nach zurück-button sicherstellen, weil wenn zu oft -> Absturz
activity beenden oder so

id auf -1 bei optionsmenü items die unwichtig sind,
dann index bei 0 statt 1 beginnen (ansonten fehlen Elemente)

KI: is it? random -> später ki, damit Zug möglich ist
ausgeschlossenbyplayerone

wenn Karte umgeklappt, dann visibility --
und setclickable = false