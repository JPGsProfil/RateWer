package com.example.wlg.ratewer.Model;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 * list of attributs generated by cardlist
 */
public class AttributList {
    public List<StringsToDisplayAttributes> attributList = new ArrayList<>();


    /**
     * generate a new list depending on given cardlist
     *
     * @param _cardList given cardlist
     */
    public AttributList(CardList _cardList) {

        FillAttributeListFromCardList(_cardList);
    }

    /**
     * copy constructor
     *
     * @param _attributList source
     */
    public AttributList(AttributList _attributList) {
        for (int index = 0; index < _attributList.attributList.size(); index++) {
            StringsToDisplayAttributes newEntry = new StringsToDisplayAttributes(_attributList.attributList.get(index));
            attributList.add(newEntry);
        }
    }

    /**
     * iterate list to find out if card has target value (e.g. black hair)
     * necessary because position of category (hair) unknown (dynamic)
     *
     * @param _attr attribute
     * @param _val  value
     * @return true if contains, else false
     */
    public boolean contains(String _attr, String _val) {
        for (int i = 0; i < attributList.size(); i++) {
            if (attributList.get(i).attr.equals(_attr)) {
                return attributList.get(i).value.equals(_val);
            }
        }
        return false;
    }


    /**
     * dynamic generate attributelist depending on remaining cards
     *
     * @param _cardList attributes from this list used to fill attributelist
     */
    private void FillAttributeListFromCardList(CardList _cardList) {
        List<AttribValue> attribValueList = new ArrayList<>();
        //KeyValuesUnique.add(new AttribValue("ja","n"));

        for (int index1 = 0; index1 < _cardList.GetSize(); index1++) {
            for (int iValues = 0; iValues < _cardList.Get(0).attriList.size(); iValues++) {
                String curAttrib = _cardList.Get(index1).attriList.get(iValues).attr;
                String curValue = _cardList.Get(index1).attriList.get(iValues).value;
                AttribValue newAttribValue = new AttribValue(curAttrib, curValue);
                // check whether list contains this key value
                if (!attribValueList.contains(newAttribValue)) {
                    attribValueList.add(newAttribValue);
                }
            }
        }

        // to display in cathegories and order (menu)
        Collections.sort(attribValueList);
        // debugging: display if works:
        //System.out.println("Print Set!!!!!");
        //for(int index = 0; index <attribValueList.size(); index++)
        //{
        //    System.out.println(attribValueList.get(index).attr+"   "+attribValueList.get(index).value);
        //}


        String prevAttrib = "-1";
        int curGroupId = 0;
        // now we know how many values contain to one attribute -> make list with groupid ...
        for (int index = 0; index < attribValueList.size(); index++) {
            if (!attribValueList.get(index).attr.equals(prevAttrib)) {
                curGroupId++;
            }
            String curAttr = attribValueList.get(index).attr;
            String curValue = attribValueList.get(index).value;

            attributList.add(new StringsToDisplayAttributes(curAttr, curValue, curGroupId));
            prevAttrib = curAttr;
        }

    }


    public List<String> GetValuesForAnAttribute(String _attribute) {
        List<String> valueList = new ArrayList();
        for (int index = 0; index < attributList.size(); index++) {
            if (attributList.get(index).attr.equals(_attribute)) {
                valueList.add(attributList.get(index).value);
            }
        }
        return valueList;

    }

}